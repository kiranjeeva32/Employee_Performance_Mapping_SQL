CREATE DATABASE employee;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER,DEPT FROM emp_record_table;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER,DEPT,EMP_RATING FROM emp_record_table WHERE EMP_RATING < 2;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER,DEPT,EMP_RATING FROM emp_record_table WHERE EMP_RATING > 4;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER,DEPT,EMP_RATING FROM emp_record_table WHERE EMP_RATING > 2 AND EMP_RATING < 4;
SELECT CONCAT(FIRST_NAME,' ',LAST_NAME) AS NAME FROM emp_record_table WHERE DEPT='FINANCE';
SELECT DISTINCT(E1.EMP_ID), E1.FIRST_NAME, E1.LAST_NAME, E1.ROLE, E1.DEPT FROM emp_record_table 
AS E1, emp_record_table AS E2 WHERE E1.EMP_ID = E2.MANAGER_ID;
SELECT COUNT(DISTINCT( MANAGER_ID)) AS NO_of_Reporters FROM emp_record_table WHERE MANAGER_ID IS NOT NULL;
SELECT * FROM emp_record_table WHERE DEPT='HEALTHCARE' UNION SELECT * FROM emp_record_table WHERE DEPT='FINANCE';
SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, DEPT, EMP_RATING,MAX(EMP_RATING) OVER(PARTITION BY DEPT) FROM emp_record_table;
SELECT DISTINCT(ROLE),MAX(SALARY) OVER (PARTITION BY ROLE) AS MAX_SALARY_BY_ROLE,
MIN(SALARY) OVER (PARTITION BY ROLE) AS MIN_SALARY_BY_ROLE FROM emp_record_table ORDER BY ROLE;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, DEPT,EXP,RANK() OVER (PARTITION BY DEPT ORDER BY EXP) FROM emp_record_table ;
CREATE OR REPLACE VIEW emp_view AS SELECT EMP_ID, FIRST_NAME,LAST_NAME, COUNTRY, 
SALARY from emp_record_table WHERE SALARY >6000 order by country;
SELECT * FROM emp_view;
SELECT EMP_ID, FIRST_NAME,LAST_NAME,EXP FROM emp_record_table WHERE 
EMP_ID IN (SELECT EMP_ID FROM emp_record_table WHERE EXP > 10);
DROP PROCEDURE get_exp;
DELIMITER &&
CREATE PROCEDURE get_exp()
BEGIN
SELECT * FROM emp_record_table WHERE EXP>3;
END &&
DELIMITER ;
CALL get_exp();
SELECT EMP_ID, FIRST_NAME, LAST_NAME, SALARY, EMP_RATING ,(0.05* SALARY * EMP_RATING) AS BONUS FROM emp_record_table;
DROP FUNCTION check_role_with_exp;
DELIMITER &&
CREATE FUNCTION check_role_with_exp(EXPE INT, ROLES VARCHAR(50))
RETURNS VARCHAR(50)
DETERMINISTIC
BEGIN
DECLARE result VARCHAR(50);
IF EXPE <= 2 AND ROLES='JUNIOR DATA SCIENTIST' THEN SET result= 'matched';
ELSEIF EXPE>2 AND EXPE<=5 AND ROLES='ASSOCIATE DATA SCIENTIST' THEN SET result= 'matched';
ELSEIF EXPE>5 AND EXPE<=10 AND ROLES='SENIOR DATA SCIENTIST' THEN SET result= 'matched';
ELSEIF EXPE>10 AND EXPE<=12 AND ROLES='LEAD DATA SCIENTIST' THEN SET result= 'matched';
ELSEIF EXPE>12 AND EXPE<=16 AND ROLES='MANAGER' THEN SET result= 'matched';
ELSE 
SET result = 'not matched';
END IF;
RETURN (result);
END &&
DELIMITER ;
SELECT EXP, ROLE,check_role_with_exp(EXP, ROLE) FROM data_science_team;
CREATE INDEX indx ON employee.emp_record_table (first_name(10));
EXPLAIN SELECT * FROM emp_record_table WHERE FIRST_NAME='Eric';
SHOW INDEXes FROM emp_record_table;

SELECT DISTINCT (COUNTRY),AVG(SALARY) OVER(PARTITION BY COUNTRY) AS avg_country, CONTINENT,
AVG(SALARY) OVER(PARTITION BY CONTINENT) AS avg_continent  FROM emp_record_table ORDER BY COUNTRY;
